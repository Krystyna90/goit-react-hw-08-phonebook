{"version":3,"file":"static/js/956.fca488fb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactsList.module.css?c071","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/pages/ContactPage/ContactPage.module.css?b217","pages/ContactPage/ContactPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Contact_form\":\"ContactForm_Contact_form__zAm5F\",\"Contact_label\":\"ContactForm_Contact_label__AdLpD\",\"Name\":\"ContactForm_Name__fn3OJ\",\"Contact_input\":\"ContactForm_Contact_input__g8kh0\",\"Contact_btn\":\"ContactForm_Contact_btn__oaYCK\"};","import { useState } from \"react\";\r\nimport css from \"./ContactForm.module.css\";\r\nimport {\r\n  useFetchContactsQuery,\r\n  useAddContactsMutation,\r\n} from \"../../redux/contacts/contacts-query\";\r\nexport default function ContactForm() {\r\n  const { data = [], isSuccess } = useFetchContactsQuery();\r\n\r\n  const [addContact, addContactInfo] = useAddContactsMutation();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    switch (event.target.name) {\r\n      case \"name\":\r\n        setName(event.target.value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(event.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const addingUniqueName = data\r\n      .map((contact) => contact.name.toLowerCase())\r\n      .includes(name.toLowerCase());\r\n\r\n    if (addingUniqueName) {\r\n      alert(`${name} is already in your phone book`);\r\n    } else {\r\n      addContact({ name, number });\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={css.Contact_form} onSubmit={(e) => onSubmitForm(e)}>\r\n        <label className={css.Contact_label}>\r\n          <span className={css.Name}>Name</span>\r\n          <input\r\n            className={css.Contact_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={css.Contact_label}>\r\n          <span className={css.Name}>Number</span>\r\n          <input\r\n            className={css.Contact_input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={css.Contact_btn} type=\"submit\">\r\n          Add to contact\r\n        </button>\r\n      </form>\r\n\r\n      <h2>Contacts</h2>\r\n    </>\r\n  );\r\n}\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = ({ contacts }) => contacts;\r\nexport const getState = ({ contacts }) => ({\r\n  loading: contacts.isLoading,\r\n  error: contacts.error,\r\n});\r\n\r\nexport const getNumberOfAllContacts = createSelector(\r\n  [getContacts],\r\n  (contacts) => {\r\n    return contacts.length;\r\n  }\r\n);\r\nexport const getFilter = (store) => store.filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Contact_list\":\"ContactsList_Contact_list__7S2CN\",\"Contact_list__item\":\"ContactsList_Contact_list__item__hTEEV\",\"DeleteBtn\":\"ContactsList_DeleteBtn__FThWF\"};","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useFetchContactsQuery,\r\n  useRemoveContactsMutation,\r\n} from \"../../redux/contacts/contacts-query\";\r\nimport { getFilter } from \"../../redux/selectors\";\r\nimport css from \"./ContactsList.module.css\";\r\n\r\nconst ContactList = () => {\r\n  const { data = [], isLoading, isSuccess } = useFetchContactsQuery();\r\n  const [removeContact, removeContactInfo] = useRemoveContactsMutation();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const getFilteredContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return data.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const deleteContact = (contactID) => {\r\n    removeContact(contactID);\r\n  };\r\n  return (\r\n    <div>\r\n      {data.length > 0 && isSuccess && (\r\n        <ul className={css.Contact_list}>\r\n          {getFilteredContacts().map((contact) => (\r\n            <li key={contact.id} className={css.Contact_list__item}>\r\n              {contact.name} : {contact.number}\r\n              {\r\n                <button\r\n                  className={css.DeleteBtn}\r\n                  type=\"button\"\r\n                  name=\"delete\"\r\n                  onClick={() => deleteContact(contact.id)}\r\n                >\r\n                  Delete contact\r\n                </button>\r\n              }\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {isLoading && <p>...LOADING</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Filter_label\":\"Filter_Filter_label__g+Pt+\",\"Filter_input\":\"Filter_Filter_input__sL3Nz\"};","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from \"../../redux/selectors\";\r\nimport { setFilter } from \"../../redux/filter/filter-slice\";\r\nimport css from \"./Filter.module.css\";\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const changeFilter = (e) => {\r\n    dispatch(setFilter(e.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <label className={css.Filter_label}>\r\n      Find contact by name\r\n      <input\r\n        className={css.Filter_input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={changeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactsContainer\":\"ContactPage_ContactsContainer__YrdiO\",\"Title\":\"ContactPage_Title__RQ6FW\"};","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport { selectUser } from \"../../redux/user/userSlice\";\r\n\r\nimport ContactForm from \"components/ContactForm/ContactForm\";\r\nimport ContactList from \"components/ContactList/ContactList\";\r\nimport Filter from \"components/Filter/Filter\";\r\n\r\nimport css from \"./ContactPage.module.css\";\r\n\r\nexport default function ContactsPage() {\r\n  const { user } = useSelector(selectUser);\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/\"></Navigate>;\r\n  }\r\n\r\n  return (\r\n    <div className={css.ContactsContainer}>\r\n      <h1 className={css.Title}>{user.name}, welcome to your phone book !</h1>\r\n\r\n      <ContactForm></ContactForm>\r\n      <Filter></Filter>\r\n      <ContactList></ContactList>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ContactForm","useFetchContactsQuery","data","isSuccess","useAddContactsMutation","addContact","useState","name","setName","number","setNumber","handleChange","event","target","value","className","css","onSubmit","e","preventDefault","map","contact","toLowerCase","includes","alert","onSubmitForm","type","onChange","pattern","title","required","createSelector","contacts","length","getFilter","store","filter","isLoading","useRemoveContactsMutation","removeContact","useSelector","normalizedFilter","getFilteredContacts","onClick","contactID","id","dispatch","useDispatch","setFilter","currentTarget","ContactsPage","user","selectUser","to"],"sourceRoot":""}