{"version":3,"file":"static/js/973.829a4767.chunk.js","mappings":"4QACA,EAAiC,kCAAjC,EAA0E,wB,UCqE1E,EAjEkB,SAAH,GAAsB,IAAhBA,EAAQ,EAARA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAEtBC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAEd,OAAQD,GACN,IAAK,QACH,OAAON,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,OAEN,EAaA,OACE,gBAAKC,UAAWC,EAAmB,UACjC,kBAAMZ,SAbW,SAACO,GAEpB,OADAA,EAAEM,iBACmB,KAAjBX,EAAMY,QAAqC,KAApBV,EAASU,OAC3BC,MAAM,2CACJX,EAASY,OAAS,EACpBD,MAAM,sDAEff,EAAS,CAAEE,MAAAA,EAAOE,SAAAA,GAGpB,EAGkCO,UAAWC,EAAUK,aAAa,MAAK,WACnE,SAACC,EAAA,EAAS,CACRC,MAAM,QACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,QACLb,KAAK,QACLC,MAAOR,EACPqB,SAAUjB,EACVK,UAAW,eAGb,SAACO,EAAA,EAAS,CACRC,MAAM,WACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,WACLb,KAAK,WACLC,MAAON,EACPmB,SAAUjB,EACVK,UAAW,eAGb,SAACa,EAAA,EAAM,CACLJ,QAAQ,YACRC,MAAM,YACNI,KAAK,QACLH,KAAK,SAAQ,uBAOvB,ECpEA,EAAiC,kCCKlB,SAASI,IACtB,OAAuCC,EAAAA,EAAAA,MAAsB,eAAtDC,EAAS,YAAIC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAEpBC,EAAc,yCAAG,WAAOF,GAAI,sFAC1BD,EAAUC,GAAM,KAAD,sCACtB,gBAFmB,sCAIpB,OAAIA,GACK,SAAC,KAAQ,CAACG,GAAG,eAElBF,GACFf,MAAM,iCAGN,gBAAKJ,UAAWC,EAAmB,UACjC,SAAC,EAAS,CAACZ,SAAU+B,MAG3B,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","webpack://goit-react-hw-08-phonebook/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"LoginContainer\":\"LoginForm_LoginContainer__B3NPn\",\"Form\":\"LoginForm_Form__z97K8\"};","import { useState } from \"react\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { Button } from \"@mui/material\";\r\nimport css from \"./LoginForm.module.css\";\r\n\r\nconst LoginForm = ({ onSubmit }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      return alert(\"ðŸ’© Please fill in all fields!\");\r\n    } else if (password.length < 7) {\r\n      return alert(\"Passwords must be at least 7 characters long!\");\r\n    }\r\n    onSubmit({ email, password });\r\n    // setEmail(\"\");\r\n    // setPassword(\"\");\r\n  };\r\n  return (\r\n    <div className={css.LoginContainer}>\r\n      <form onSubmit={handleSubmit} className={css.Form} autoComplete=\"off\">\r\n        <TextField\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          className={\"textField\"}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          className={\"textField\"}\r\n        />\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"LoginContainer\":\"LoginPage_LoginContainer__XPoqU\"};","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useLoginUserMutation } from \"redux/user/user-query\";\r\nimport LoginForm from \"components/LoginForm/LoginForm\";\r\nimport css from \"./LoginPage.module.css\";\r\n\r\nexport default function LoginPage() {\r\n  const [loginUser, { data, isError }] = useLoginUserMutation();\r\n\r\n  const onHandleSubmit = async (data) => {\r\n    await loginUser(data);\r\n  };\r\n\r\n  if (data) {\r\n    return <Navigate to=\"/contacts\"></Navigate>;\r\n  }\r\n  if (isError) {\r\n    alert(\"Make sure your data is clear\");\r\n  }\r\n  return (\r\n    <div className={css.LoginContainer}>\r\n      <LoginForm onSubmit={onHandleSubmit}></LoginForm>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["onSubmit","useState","email","setEmail","password","setPassword","handleChange","e","target","name","value","className","css","preventDefault","trim","alert","length","autoComplete","TextField","label","variant","color","type","onChange","Button","size","LoginPage","useLoginUserMutation","loginUser","data","isError","onHandleSubmit","to"],"sourceRoot":""}